source_https <- function(url, ...) {
# load package
require(RCurl)
# parse and evaluate each .R script
sapply(c(url, ...), function(u) {
eval(parse(text = getURL(u, followlocation = TRUE, cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))), envir = .GlobalEnv)
})
}
# Example
source_https("https://raw.github.com/tonybreyal/Blog-Reference-Functions/master/R/bingSearchXScraper/bingSearchXScraper.R",
"https://raw.github.com/tonybreyal/Blog-Reference-Functions/master/R/htmlToText/htmlToText.R")
require(RCurl)
install.packages("RCurl")
source_https <- function(url, ...) {
# load package
require(RCurl)
# parse and evaluate each .R script
sapply(c(url, ...), function(u) {
eval(parse(text = getURL(u, followlocation = TRUE, cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))), envir = .GlobalEnv)
})
}
# Example
source_https("https://raw.github.com/tonybreyal/Blog-Reference-Functions/master/R/bingSearchXScraper/bingSearchXScraper.R",
"https://raw.github.com/tonybreyal/Blog-Reference-Functions/master/R/htmlToText/htmlToText.R")
htmlToText()
htmlToText
require(RJSONIO)
install.packages("RJSONIO")
require(RJSONIO)
resultsURL='http://apex.oracle.com/pls/apex/dbtools/names/random?num=10'
results.data.json=fromJSON(resultsURL)
results.data.json$items
install.packages("jsonlite")
library(jsonlite)
library(httr)
#get data
data1 <- fromJSON("http://apex.oracle.com/pls/apex/dbtools/names/random?num=10")
install.packages("httr")
library(jsonlite)
library(httr)
#get data
data1 <- fromJSON("http://apex.oracle.com/pls/apex/dbtools/names/random?num=10")
summary(data1$items)
head(data1$items)
items.narrow <- data1$items[,c("gender","country","feetinches","birthday")]
head(items.narrow)
items.narrow$birthdate  <- as.POSIXct(items.narrow$birthdate, format = "%m/%d/%y",tz="UTC")
items.narrow$birthdate  <- as.POSIXct(items.narrow$birthday, format = "%m/%d/%y",tz="UTC")
head(items.narrow)
str(items.narrow)
items.narrow <- data1$items[,c("gender","occupation", "country","feetinches","birthday")]
str(items.narrow)
head(items.narrow)
items.narrow$birthdate  <- as.POSIXct(items.narrow$birthday, format = "%m/%d/%y",tz="UTC")
str(items.narrow)
library(lubridate)
difftime(now(),items.narrow$birthdate,units="days")
difftime(now(),items.narrow$birthdate,units="years")
difftime(now(),items.narrow$birthdate,units="auto")
years(difftime(now(),items.narrow$birthdate,units="months"))
years(difftime(now(),items.narrow$birthdate,units="days"))
dyears(difftime(now(),items.narrow$birthdate,units="days"))
new_interval(items.narrow$birthdate, now()) / duration(num = 1, units = "years")
new_interval(items.narrow$birthdate, now())
head(items.narrow)
items.narrow$birthdate2  <- mdy(items.narrow$birthday)
head(items.narrow)
items.narrow$birthdate  <- as.POSIXct(items.narrow$birthday, format = "%m/%d/%Y",tz="UTC")
str(items.narrow)
head(items.narrow)
new_interval(items.narrow$birthdate, now()) / duration(num = 1, units = "years")
items.narrow$age <- new_interval(items.narrow$birthdate, now()) / duration(num = 1, units = "years")
head(items.narrow)
items.narrow$age <- round(new_interval(items.narrow$birthdate, now()) / duration(num = 1, units = "years"))
head(items.narrow)
source('M:/Dropbox/MyFiles/Presentations/RMOUG 2014/Intro to R/json.R')
View(items.narrow)
rm(data1)
source('~/.active-rstudio-document')
head(items.narrow)
View(items.narrow)
str(items.narrow)
summary(items.narrow)
nrow(distinct(items.narrow$occupation))
nrow(unique(items.narrow$occupation))
length(unique(items.narrow$occupation))
data1 <- fromJSON("http://apex.oracle.com/pls/apex/dbtools/names/random?num=1000")
summary(data1$items)
head(data1$items)
items.narrow <- data1$items[,c("gender","occupation", "country","feetinches","birthday")]
rm(data1) # remove it since we're done with it
head(items.narrow)
items.narrow$birthdate  <- as.POSIXct(items.narrow$birthday, format = "%m/%d/%Y",tz="UTC") # create a new column in the data.frame of type POSIXct (date)
#items.narrow$birthdate2  <- mdy(items.narrow$birthday) #lubridate version of above
str(items.narrow)
library(lubridate)
items.narrow$age <- round(new_interval(items.narrow$birthdate, now()) / duration(num = 1, units = "years")) # add an age column
head(items.narrow)
summary(items.narrow)
length(unique(items.narrow$occupation)) # how many distinct occupations?
length(unique(items.narrow$country)) # how many distinct occupations?
ggplot(data=items.narrow,aes(x=country,y=age))
library(ggplot2)
ggplot(data=items.narrow,aes(x=country,y=age))
ggplot(data=items.narrow,aes(x=country,y=age))+
geom_point()
ggplot(data=items.narrow,aes(x=country,y=age))+
geom_boxplot()
items.narrow.short = subset(items.narrow,contry %in% c('DE','BR','NZ'))
items.narrow.short = subset(items.narrow,country %in% c('DE','BR','NZ'))
ggplot(data=items.narrow.short,aes(x=country,y=age))+
geom_boxplot()
ggplot(data=items.narrow.short,aes(x=country,y=age))+
geom_boxplot()+
geom_point()
ggplot(data=items.narrow.short,aes(x=country,y=age))+
geom_boxplot()+
geom_point(aes(alpha=0.3))
ggplot(data=items.narrow.short,aes(x=country,y=age))+
geom_boxplot()+
geom_point(alpha=0.3)
ggplot(data=items.narrow.short,aes(x=country,y=age))+
geom_boxplot()+
geom_point(alpha=0.3,position = position_jitter(width = .2,height=0))
ggplot(data=items.narrow.short,aes(x=country,y=age))+
geom_boxplot()+
geom_point()
ggplot(data=items.narrow.short,aes(x=country,y=age))+
geom_boxplot()+
geom_point()
ggplot(data=items.narrow.short,aes(x=country,y=age))+
geom_boxplot()+
geom_point()
ggplot(data=items.narrow.short,aes(x=country,y=age),group=gender)+
geom_boxplot()+
geom_point(alpha=0.3,position = position_jitter(width = .2,height=0))
ggplot(data=items.narrow.short,aes(x=country,y=age),color=gender)+
geom_boxplot()+
geom_point(alpha=0.3,position = position_jitter(width = .2,height=0))
ggplot(data=items.narrow.short,aes(x=country,y=age),color=gender)+
geom_boxplot(position="dodge")+
geom_point(alpha=0.3,position = position_jitter(width = .2,height=0))
ggplot(data=items.narrow.short,aes(x=country,y=age),fill=gender)+
geom_boxplot(position="dodge")+
geom_point(alpha=0.3,position = position_jitter(width = .2,height=0))
View(items.narrow.short)
items.narrow.short$gender <- factor(items.narrow.short$gender )
ggplot(data=items.narrow.short,aes(x=country,y=age),fill=gender)+
geom_boxplot(position="dodge")+
geom_point(alpha=0.3,position = position_jitter(width = .2,height=0))
ggplot(data=items.narrow.short,aes(x=country,y=age),fill=gender)+
geom_boxplot(position="dodge")
#geom_point(alpha=0.3,position = position_jitter(width = .2,height=0))
ggplot(data=items.narrow.short,aes(x=country,y=age),group=gender)+
geom_boxplot(position="dodge")
#geom_point(alpha=0.3,position = position_jitter(width = .2,height=0))
ggplot(data=items.narrow.short,aes(x=country,y=age),fill=gender)+
geom_boxplot(position="dodge")
#geom_point(alpha=0.3,position = position_jitter(width = .2,height=0))
ggplot(data=items.narrow.short,aes(x=country,y=age,fill=gender))+
geom_boxplot(position="dodge")
#geom_point(alpha=0.3,position = position_jitter(width = .2,height=0))
ggplot(data=items.narrow.short,aes(x=country,y=age,fill=gender))+
geom_boxplot(position="dodge")+
geom_point(alpha=0.3,position = position_jitter(width = .2,height=0))
ggplot(data=items.narrow.short,aes(x=country,y=age,fill=gender))+
geom_boxplot(position="dodge")+
geom_point(alpha=0.3,position = "dodge")
ggplot(data=items.narrow.short,aes(x=country,y=age,fill=gender))+
geom_boxplot(position="dodge")
ggplot(data=items.narrow.short,aes(x=country,y=age))+
geom_boxplot()+
geom_point(alpha=0.3,position = position_jitter(width = .2,height=0))
ggplot(data=items.narrow.short,aes(x=country,y=age,fill=gender))+
geom_boxplot(position="dodge")
ggplot(data=items.narrow.short,aes(x=country,y=age,fill=gender))+
geom_boxplot(position="dodge")+
facet_wrap( ~ country,nrow=1)
ggplot(data=items.narrow.short,aes(x=country,y=age,fill=gender))+
geom_boxplot(position="dodge")+
facet_wrap(gender ~ country,nrow=1)
ggplot(data=items.narrow.short,aes(x=country,y=age,fill=gender))+
geom_boxplot(position="dodge")+
facet_wrap(gender ~ country)
ggplot(data=items.narrow.short,aes(x=country,y=age,fill=gender))+
geom_boxplot(position="dodge")+
facet_wrap(country ~ gender)
ggplot(data=items.narrow.short,aes(x=country,y=age,fill=gender))+
geom_boxplot(position="dodge")+
facet_wrap(country ~ gender,ncol=2)
ggplot(data=items.narrow.short,aes(y=age,fill=gender))+
geom_boxplot(position="dodge")+
facet_wrap(country ~ gender,ncol=2)
ggplot(data=items.narrow.short,aes(x=1,y=age,fill=gender))+
geom_boxplot(position="dodge")+
facet_wrap(country ~ gender,ncol=2)
ggplot(data=items.narrow.short,aes(x=" ",y=age,fill=gender))+
geom_boxplot(position="dodge")+
facet_wrap(country ~ gender,ncol=2)
